From 3348307dd43295d43c2b8626ec08c2c4b8f51f91 Mon Sep 17 00:00:00 2001
From: Ted Cooper <elc@784944.no-reply.drupal.org>
Date: Wed, 19 Oct 2011 19:10:25 +1000
Subject: [PATCH] Issue #900010 by ELC: Discounts filtered by SKU, attribute adjustments fix.

Adjust admin.inc to pull all SKUs out.
Make admin.inc changes contingent on uc_attribute being installed.
Add remainder of workings to get SKU adjustments to work.
Make .module file check for uc_attribute.

Some semi-related, and completely unrelated things changed in this patch too.
Fix typo in uc_discounts_form_submit that prevented SKUs from required products being saved properly.
 Also swapped a few "" to ''. Needs wholesale change throughout the code.
Removed erroneous version and other related variables from .info files
Remove defunct .cvsignore file.
Removed all the CVS Id tags from files.
---
 .cvsignore                                         |    1 -
 .../codeless_discounts_field.info                  |    6 -
 .../includes/discounted_price_handler.inc          |    2 +-
 .../product_price_alterer_field.info               |   14 --
 .../product_price_alterer_field.install            |   18 +-
 .../product_price_alterer_field.module             |    3 +-
 uc_discounts/uc_discounts.admin.inc                |   35 +++-
 uc_discounts/uc_discounts.info                     |    7 -
 uc_discounts/uc_discounts.install                  |    3 +-
 uc_discounts/uc_discounts.js                       |    2 +-
 uc_discounts/uc_discounts.module                   |  203 +++++++++++++++-----
 11 files changed, 197 insertions(+), 97 deletions(-)
 delete mode 100644 .cvsignore

diff --git a/.cvsignore b/.cvsignore
deleted file mode 100644
index 85de3d4..0000000
--- a/.cvsignore
+++ /dev/null
@@ -1 +0,0 @@
-LICENSE.txt
\ No newline at end of file
diff --git a/codeless_discounts_field/codeless_discounts_field.info b/codeless_discounts_field/codeless_discounts_field.info
index 31e1550..a6b6c95 100644
--- a/codeless_discounts_field/codeless_discounts_field.info
+++ b/codeless_discounts_field/codeless_discounts_field.info
@@ -5,9 +5,3 @@ dependencies[] = content
 package = CCK
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-07-11
-version = "6.x-2.x-dev"
-core = "6.x"
-project = "uc_discounts_alt"
-datestamp = "1278836081"
-
diff --git a/product_price_alterer_field/includes/discounted_price_handler.inc b/product_price_alterer_field/includes/discounted_price_handler.inc
index 99cdc5f..dc620fa 100644
--- a/product_price_alterer_field/includes/discounted_price_handler.inc
+++ b/product_price_alterer_field/includes/discounted_price_handler.inc
@@ -1,5 +1,4 @@
 <?php
-//$Id: discounted_price_handler.inc,v 1.2 2009/08/22 21:30:39 ryangroe Exp $
 
 /**
  * Renders a discounted price field.
@@ -26,3 +25,4 @@ class discounted_price_handler extends views_handler_field {
     return check_plain($output);
   }
 }
+
diff --git a/product_price_alterer_field/product_price_alterer_field.info b/product_price_alterer_field/product_price_alterer_field.info
index 2c64d5e..cebaf60 100644
--- a/product_price_alterer_field/product_price_alterer_field.info
+++ b/product_price_alterer_field/product_price_alterer_field.info
@@ -1,4 +1,3 @@
-; $Id: product_price_alterer_field.info,v 1.1.2.1 2010/08/09 14:53:07 davexoxide Exp $
 name =  Product Price Alterer Field
 description = Defines CCK-based field for altering product price based on applicable discounts from uc_discounts_alt module.
 dependencies[] = uc_discounts
@@ -6,16 +5,3 @@ dependencies[] = content
 package = CCK
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-07-11
-version = "6.x-2.x-dev"
-core = "6.x"
-project = "uc_discounts_alt"
-datestamp = "1278836081"
-
-
-; Information added by drupal.org packaging script on 2010-12-30
-version = "6.x-2.0"
-core = "6.x"
-project = "uc_discounts_alt"
-datestamp = "1293741199"
-
diff --git a/product_price_alterer_field/product_price_alterer_field.install b/product_price_alterer_field/product_price_alterer_field.install
index ddeace0..a223447 100644
--- a/product_price_alterer_field/product_price_alterer_field.install
+++ b/product_price_alterer_field/product_price_alterer_field.install
@@ -1,6 +1,4 @@
 <?php
-//$Id: product_price_alterer_field.install,v 1.2 2009/08/22 21:30:39 ryangroe Exp $
-
 
 /**
  * @file
@@ -11,16 +9,16 @@
  * Implementation of hook_install().
  */
 function product_price_alterer_field_install() {
-  drupal_load("module", "content");
-  content_notify("install", "product_price_alterer");
+  drupal_load('module', 'content');
+  content_notify('install', 'product_price_alterer');
 }
 
 /**
  * Implementation of hook_uninstall().
  */
 function product_price_alterer_field_uninstall() {
-  drupal_load("module", "content");
-  content_notify("uninstall", "product_price_alterer");
+  drupal_load('module', 'content');
+  content_notify('uninstall', 'product_price_alterer');
 }
 
 /**
@@ -29,8 +27,8 @@ function product_price_alterer_field_uninstall() {
  * Notify content module when this module is disabled.
  */
 function product_price_alterer_field_enable() {
-  drupal_load("module", "content");
-  content_notify("enable", "product_price_alterer");
+  drupal_load('module', 'content');
+  content_notify('enable', 'product_price_alterer');
 }
 
 /**
@@ -39,7 +37,7 @@ function product_price_alterer_field_enable() {
  * Notify content module when this module is disabled.
  */
 function product_price_alterer_field_disable() {
-  drupal_load("module", "content");
-  content_notify("disable", "product_price_alterer");
+  drupal_load('module', 'content');
+  content_notify('disable', 'product_price_alterer');
 }
 
diff --git a/product_price_alterer_field/product_price_alterer_field.module b/product_price_alterer_field/product_price_alterer_field.module
index 8e8c07d..c7fe9d4 100644
--- a/product_price_alterer_field/product_price_alterer_field.module
+++ b/product_price_alterer_field/product_price_alterer_field.module
@@ -1,6 +1,4 @@
 <?php
-//$Id: product_price_alterer_field.module,v 1.16 2009/08/22 21:30:39 ryangroe Exp $
-
 
 /**
  * See http://drupal.org/node/106716 for more information.
@@ -167,3 +165,4 @@ function product_price_alterer_field_views_api() {
     'api' => 2,
   );
 }
+
diff --git a/uc_discounts/uc_discounts.admin.inc b/uc_discounts/uc_discounts.admin.inc
index f5acf80..768ae1c 100644
--- a/uc_discounts/uc_discounts.admin.inc
+++ b/uc_discounts/uc_discounts.admin.inc
@@ -354,7 +354,7 @@ function uc_discounts_form($form_state, $discount_id = 0) {
 
   $form['application']['discount_amount'] = array(
     '#type' => 'textfield',
-    '#title' => t('Discount amount'),
+    '#title' => t('Discount amount BLEEP'),
     '#description' => t('The amount of discount.  E.g. 50 (for $50), 5 (for 5 items), or 0.05 (for 5%)'),
     '#default_value' => $form_state['values']['discount_amount'],
     '#size' => 15,
@@ -495,12 +495,35 @@ function _uc_discounts_product_filter_form(&$form, $form_state, $grouping, $disc
   $name = "$grouping-filter-select-" . FILTER_TYPE_SKUS;
   $skus = isset($form_state['values'][$name]) ? $form_state['values'][$name] : get_skus_for_discount($discount_id, $grouping, FALSE);
   $options = array();
-  $result = db_query('SELECT p.model, n.title FROM {uc_products} p, {node} n WHERE p.nid=n.nid ORDER BY p.model');
   if ($grouping == DISCOUNT_FILTER_GROUPING_APPLICATION) {
     $options[ALL_SKUS] = t("<All SKUs>");
   }
+  // Grab a list of all adjustments, but only if the module that creates it is present.
+  $sku_adjustments = array();
+  if (module_exists('uc_attribute')) {
+    $result = db_query('SELECT pa.* FROM {uc_product_adjustments} pa LEFT JOIN {node} n ON pa.nid = n.nid ORDER BY pa.model');
+    while ($row = db_fetch_array($result)) {
+      $sku_adjustments[$row['nid']][] = $row;
+    }
+  }
+  // Make list of all products, and any adjustments
+  $result = db_query('SELECT p.nid, p.model, n.title FROM {uc_products} p LEFT JOIN {node} n ON p.nid = n.nid ORDER BY p.model');
   while ($row = db_fetch_object($result)) {
-    $options[$row->model] = "$row->model ($row->title)";
+    if (isset($sku_adjustments[$row->nid])) {
+      // Make this a super group
+      $opt_group = array($row->model => check_plain($row->model) . ' <Original>');
+      foreach ($sku_adjustments[$row->nid] as $j => $adjustment) {
+        // Only add the model if it doesn't overwrite something else; most interestingly
+        // the <Original> tagged one.
+        $key = $adjustment['model'];
+        if (!isset($opt_group[$key])) {
+          $opt_group[$key] = check_plain($adjustment['model']);
+        }
+      }
+      $options[check_plain($row->title)] = $opt_group;
+    } else {
+      $options[$row->model] = t('@model (@title)', array('@model' => $row->model, '@title' => $row->title));
+    }
   }
   $form[$fieldset_name]['filter'][$name] = array(
     "#type" => "select",
@@ -556,7 +579,7 @@ function _uc_discounts_product_filter_form(&$form, $form_state, $grouping, $disc
  * Validate handler for uc_discounts_form().
  */
 function uc_discounts_form_validate($form, &$form_state) {
-  $values = $form_state["values"];
+  $values = $form_state['values'];
   $has_errors = FALSE;
 
   if ($values["requires_code"] && empty($values["codes"])) {
@@ -681,7 +704,7 @@ function uc_discounts_form_submit($form, &$form_state) {
   }
 
   //Insert codes (if necessary)
-  if ($form_state["values"]["requires_code"]) {
+  if ($form_state['values']['requires_code']) {
     foreach ($codes as $code) {
       $code = trim($code);
       if (empty($code)) {
@@ -716,7 +739,7 @@ function uc_discounts_form_submit($form, &$form_state) {
       //Empty SKU is ALL_SKUS
       $ids = in_array(ALL_SKUS, $ids) ? array() : array_filter($ids);
       foreach ($ids as $id) {
-        $new_sku = array('discount_id' => $discount->discount_id, 'sku' => $id, 'grouping', $grouping);
+        $new_sku = array('discount_id' => $discount->discount_id, 'sku' => $id, 'grouping' => $grouping);
         drupal_write_record('uc_discounts_skus', $new_sku);
       }
     }
diff --git a/uc_discounts/uc_discounts.info b/uc_discounts/uc_discounts.info
index fe09001..3d4106b 100644
--- a/uc_discounts/uc_discounts.info
+++ b/uc_discounts/uc_discounts.info
@@ -7,10 +7,3 @@ dependencies[] = uc_product
 package = "Ubercart - core (optional)"
 core = 6.x
 
-
-; Information added by drupal.org packaging script on 2010-07-11
-version = "6.x-2.x-dev"
-core = "6.x"
-project = "uc_discounts_alt"
-datestamp = "1278836081"
-
diff --git a/uc_discounts/uc_discounts.install b/uc_discounts/uc_discounts.install
index c31deca..5744b4b 100644
--- a/uc_discounts/uc_discounts.install
+++ b/uc_discounts/uc_discounts.install
@@ -1,6 +1,4 @@
 <?php
-//$Id: uc_discounts.install,v 1.9.2.6 2010/12/28 00:06:23 jrust Exp $
-
 
 /**
  * @file
@@ -695,3 +693,4 @@ function uc_discounts_update_6006() {
   db_add_field($ret, 'uc_discounts', 'add_to_cart', $schema['uc_discounts']['fields']['add_to_cart']);
   return $ret;
 }
+
diff --git a/uc_discounts/uc_discounts.js b/uc_discounts/uc_discounts.js
index 9c805b7..9cdbc88 100644
--- a/uc_discounts/uc_discounts.js
+++ b/uc_discounts/uc_discounts.js
@@ -1,4 +1,3 @@
-//$Id: uc_discounts.js,v 1.5.2.11 2010/12/11 03:53:15 jrust Exp $
 
 var uc_discountsisUpdating = false;
 
@@ -162,3 +161,4 @@ function uc_discountsRenderLineItems(line_items, show_message) {
     getTax();
   }
 }
+
diff --git a/uc_discounts/uc_discounts.module b/uc_discounts/uc_discounts.module
index 8ad98e5..36dac6c 100644
--- a/uc_discounts/uc_discounts.module
+++ b/uc_discounts/uc_discounts.module
@@ -1,6 +1,4 @@
 <?php
-//$Id: uc_discounts.module,v 1.29.2.31 2010/12/30 19:37:21 jrust Exp $
-
 
 /**
  * @file
@@ -931,17 +929,9 @@ function get_product_ids_for_discount_object($discount, $grouping = DISCOUNT_FIL
       return $product_ids;
 
     case FILTER_TYPE_SKUS:
+      // Grab the MODEL, not the nid. No need to do any more processing.
       $skus = get_skus_for_discount($discount->discount_id, $grouping, $exclude_all_products);
-      $query = 'SELECT DISTINCT p.nid FROM {uc_products} p';
-      if (!empty($skus)) {
-        $query .= ' INNER JOIN {uc_discounts_skus} ds ON p.model=ds.sku
-                    WHERE ds.discount_id=%d';
-      }
-      $result = db_query($query, $discount->discount_id);
-      while ($row = db_fetch_object($result)) {
-        $product_ids[] = $row->nid;
-      }
-      return $product_ids;
+      return $skus;
 
     case FILTER_TYPE_CLASS:
       $classes = get_classes_for_discount($discount->discount_id, $grouping, $exclude_all_products);
@@ -1165,11 +1155,27 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
   $order_product_id_product_array_map = array();
   $order_subtotal = 0;
 
+  // Adds sorting and control by SKUs rather than NIDs
+  // for a more fine grained product discount
+  // Useful if using altered SKUs via Attributes
+  // Product SKUs in cart => subtotal of individual item
+  $order_product_id_subtotal_map_by_sku = array();
+  // Product SKUs in cart => quantity of individual item
+  $order_product_id_quantity_map_by_sku = array();
+  // Product SKUs in cart
+  $order_product_ids_by_sku = array();
+  // Product SKUs in cart=> bool
+  $order_product_ids_set_by_sku = array();
+  // Product objects in cart
+  $order_product_id_product_array_map_by_sku = array();
+
   //Create IN string of product node IDs in order
   if (is_array($order->products) && !empty($order->products)) {
     foreach ($order->products as $product) {
       $nid = $product->nid;
+      $sku = $product->model;
       $order_product_ids_set[$nid] = TRUE;
+      $order_product_ids_set_by_sku[$sku] = TRUE;
       if (is_array($product->data) && !empty($product->data['kit_id'])) {
         $kit_id = $product->data['kit_id'];
         $order_product_ids_set[$kit_id] = TRUE;
@@ -1179,6 +1185,9 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
       uc_discounts_add_to_existing_map_number_value($order_product_id_subtotal_map, $nid, $product->price * $product->qty);
       uc_discounts_add_to_existing_map_number_value($order_product_id_quantity_map, $nid, $product->qty);
 
+      uc_discounts_add_to_existing_map_number_value($order_product_id_subtotal_map_by_sku, $sku, $product->price * $product->qty);
+      uc_discounts_add_to_existing_map_number_value($order_product_id_quantity_map_by_sku, $sku, $product->qty);
+
       $a = $order_product_id_product_array_map[$nid];
       if (!is_array($a)) {
         $a = array();
@@ -1186,6 +1195,13 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
       $a[] = $product;
       $order_product_id_product_array_map[$nid] = $a;
 
+      $a = $order_product_id_product_array_map_by_sku[$sku];
+      if (!is_array($a)) {
+        $a = array();
+      }
+      $a[] = $product;
+      $order_product_id_product_array_map_by_sku[$sku] = $a;
+
       $order_subtotal += $product->price * $product->qty;
     }
     if (is_array($kits) &&  !empty($kits)) {
@@ -1208,35 +1224,41 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
   $order_product_ids = array_keys($order_product_ids_set);
   $temp_product_ids   = $order_product_ids;
   $temp_product_ids[] = ALL_PRODUCTS;
-  $product_ids_clause = sprintf("d.filter_type<>%d OR dp.product_id IN(%s)",
-    FILTER_TYPE_PRODUCTS, join(",", $temp_product_ids)
+  $product_ids_clause = sprintf('d.filter_type <> %d OR dp.product_id IN (%s)',
+    FILTER_TYPE_PRODUCTS, join(',', $temp_product_ids)
   );
 
   //Create IN string of term TIDs in order
   $temp_term_ids = array();
   $temp_term_ids[] = ALL_TERMS;
   if (is_array($order->products) && !empty($order->products)) {
-    //Get terms for order's products
-    $result = db_query("SELECT DISTINCT tid FROM {term_node} WHERE nid IN(%s)", join(",", $order_product_ids));
+    // Get terms for order's products
+    $result = db_query('SELECT DISTINCT tid FROM {term_node} WHERE nid IN (%s)', join(',', $order_product_ids));
     while ($row = db_fetch_array($result)) {
-      $temp_term_ids[] = $row["tid"];
-      $order_term_ids[] = $row["tid"];
+      $temp_term_ids[] = $row['tid'];
+      $order_term_ids[] = $row['tid'];
     }
   }
-  $term_ids_clause = sprintf("d.filter_type<>%d OR dt.term_id IN(%s)",
-    FILTER_TYPE_TERMS, join(",", $temp_term_ids)
+  $term_ids_clause = sprintf('d.filter_type <> %d OR dt.term_id IN (%s)',
+    FILTER_TYPE_TERMS, join(',', $temp_term_ids)
   );
 
-  //Create IN string of SKUs in order
+  // Create IN string of SKUs in order
+  $order_product_ids_by_sku = array_keys($order_product_ids_set_by_sku);
   $temp_skus = array();
-  $temp_skus[] = "'". db_escape_string(ALL_SKUS) ."'";
+  $temp_skus[] = '\'' . db_escape_string(ALL_SKUS) . '\'';
   if (is_array($order->products) && !empty($order->products)) {
-    //Get SKUs for order's products
-    $result = db_query("SELECT DISTINCT model FROM {uc_products} WHERE nid IN(%s)", join(",", $order_product_ids));
-    while ($row = db_fetch_array($result)) $temp_skus[] = "'". db_escape_string($row["model"]) ."'";
+    // Get SKUs for order's products
+    // Use saved SKUs from order rather than pulling default/stale SKUs from DB.
+    // Very important for use with adjusted SKUs via uc_attributes.
+    foreach ($order->products as $product) {
+      if (isset($product->model) && !empty($product->model)) {
+        $temp_skus[] = '\'' . db_escape_string($product->model) . '\'';
+      }
+    }
   }
-  $skus_clause = sprintf("d.filter_type<>%d OR ds.sku IN(%s)",
-    FILTER_TYPE_SKUS, join(",", $temp_skus)
+  $skus_clause = sprintf('d.filter_type <> %d OR ds.sku IN (%s)',
+    FILTER_TYPE_SKUS, join(',', $temp_skus)
   );
 
   //Create IN string of classes in order
@@ -1355,7 +1377,14 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
       continue;
     }
 
+    // Set flag if the discount filters by SKU
+    $sku_filter_flag = FALSE;
+    if (isset($discount->filter_type) && $discount->filter_type == FILTER_TYPE_SKUS) {
+      $sku_filter_flag = TRUE;
+    }
+
     //Get code for discount (if one exists)
+    // @todo LEEP multiple codes per discount if configured
     $discount->code = NULL;
     if (!empty($escaped_codes_string)) {
       $query = sprintf("SELECT code FROM {uc_discounts_codes} WHERE code IN(%s) AND discount_id=%d",
@@ -1456,18 +1485,38 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
     //Get product IDs for determining discount application
     $discount_product_ids = get_product_ids_for_discount_object($discount);
     if (in_array(ALL_PRODUCTS, $discount_product_ids)) {
-      $discount_product_ids = $order_product_ids;
+      if ($sku_filter_flag) {
+        $discount_product_ids = $order_product_ids_by_sku;
+      } else {
+        $discount_product_ids = $order_product_ids;
+      }
     }
 
     // Get product IDs for determining discount qualification
-    $required_product_ids = get_product_ids_for_discount_object($discount, DISCOUNT_FILTER_GROUPING_QUALIFICATION);
-    $required_ids_in_order = array_intersect($required_product_ids, $order_product_ids);
-    if (!empty($discount->code) && !empty($required_product_ids) && empty($required_ids_in_order)) {
+    $required_are_missing = false;
+    $required_product_ids = array();
+    // Get the required product ids regardless
+    if ($sku_filter_flag) {
+      // Do the search entirely based on the SKU, not the product id.
+      $required_product_ids = get_product_ids_for_discount_object($discount, DISCOUNT_FILTER_GROUPING_QUALIFICATION);
+      $required_skus_in_order = array_intersect($required_product_ids, $order_product_ids_by_sku);
+      if (!empty($required_product_ids) && empty($required_skus_in_order)) {
+        $required_are_missing = true;
+      }
+    } else {
+      $required_ids_in_order = array_intersect($required_product_ids, $order_product_ids);
+      if (!empty($required_product_ids) && empty($required_ids_in_order)) {
+        $required_are_missing = true;
+      }
+    }
+    if (!empty($discount->code) && $required_are_missing) {
       $warnings[] = t('The discount for code "@code" requires a product that is not in your cart.',
                       array('@code' => $discount->code));
       continue;
     }
 
+    // The following have all been prepared with SKU or nids, depending on
+    // the fitler that has been selected.
     if ($discount->use_only_discounted_products_to_qualify) {
       $qualification_product_ids = $discount_product_ids;
     }
@@ -1485,17 +1534,24 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
       case QUALIFYING_TYPE_MINIMUM_PRICE:
         //Determine the total subtotal of discount's products
         foreach ($qualification_product_ids as $product_id) {
-          if (isset($order_product_id_subtotal_map[$product_id])) {
+          $prd_subtotal = -1;
+          if ($sku_filter_flag && isset($order_product_id_subtotal_map_by_sku[$product_id])) {
+            $prd_subtotal = $order_product_id_subtotal_map_by_sku[$product_id];
+          }
+          elseif (isset($order_product_id_subtotal_map[$product_id])) {
+            $prd_subtotal = $order_product_id_subtotal_map[$product_id];
+          }
+          if ($prd_subtotal >= 0) {
             if ($discount->requires_single_product_to_qualify) {
-              if ($order_product_id_subtotal_map[$product_id] >= $order->qualifying_amount) {
+              if ($prd_subtotal >= $order->qualifying_amount) {
                 //In this case, $order_qualifying amount should be the sum of
                 //prices of products that both qualify and meet the minimum
                 //qualification amount based on their individual price.
-                $order_qualifying_amount += $order_product_id_subtotal_map[$product_id];
+                $order_qualifying_amount += $prd_subtotal;
               }
             }
             else {
-              $order_qualifying_amount += $order_product_id_subtotal_map[$product_id];
+              $order_qualifying_amount += $prd_subtotal;
             }
           }
         }
@@ -1506,15 +1562,24 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
       case QUALIFYING_TYPE_MINIMUM_QUANTITY:
         //Determine the total quantity of discount's products
         foreach ($qualification_product_ids as $product_id) {
-          if (isset($order_product_id_quantity_map[$product_id])) {
+          $prd_qty = -1;
+          if ($sku_filter_flag && isset($order_product_id_quantity_map_by_sku[$product_id])) {
+            $prd_qty = $order_product_id_quantity_map_by_sku[$product_id];
+          }
+          else if (isset($order_product_id_quantity_map[$product_id])) {
+            $prd_qty = $order_product_id_quantity_map[$product_id];
+          }
+          if ($prd_qty >= 0) {
             if ($discount->requires_single_product_to_qualify) {
-              if ($order_product_id_quantity_map[$product_id] >= $discount->qualifying_amount) {
-                //In this case, $order_qualifying amount should be the sum of products that both qualify and meet the minimum qualification amount based on their quantity.
-                $order_qualifying_amount += $order_product_id_quantity_map[$product_id];
+              if ($prd_qty >= $discount->qualifying_amount) {
+                // In this case, $order_qualifying amount should be the sum of
+                // products that both qualify and meet the minimum
+                // qualification amount based on their quantity.
+                $order_qualifying_amount += $prd_qty;
               }
             }
             else {
-              $order_qualifying_amount += $order_product_id_quantity_map[$product_id];
+              $order_qualifying_amount += $prd_qty;
             }
           }
         }
@@ -1565,17 +1630,43 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
       continue;
     }
 
-    //Get product IDs in order that are in discount
-    $order_and_discount_product_ids = array_intersect($discount_product_ids, $order_product_ids);
+    // Get product IDs in order that are in discount
+    $order_and_discount_product_ids = array_intersect(
+      $discount_product_ids,
+      ($sku_filter_flag) ? $order_product_ids_by_sku : $order_product_ids
+    );
 
-    //Create array of product objects in cart to which this discount gets applied.
+    // Create array of product objects in cart to which this discount gets applied.
     $order_and_discount_products = array();
     foreach ($order_and_discount_product_ids as $product_id) {
-      if (array_key_exists($product_id, $order_product_id_product_array_map)) {
-        $order_and_discount_products = array_merge($order_and_discount_products, $order_product_id_product_array_map[$product_id]);
+      if ($sku_filter_flag) {
+        if (array_key_exists($product_id, $order_product_id_product_array_map_by_sku)) {
+          $order_and_discount_products = array_merge(
+            $order_and_discount_products,
+            $order_product_id_product_array_map_by_sku[$product_id]
+          );
+        }
+      }
+      else {
+        if (array_key_exists($product_id, $order_product_id_product_array_map)) {
+          $order_and_discount_products = array_merge(
+            $order_and_discount_products,
+            $order_product_id_product_array_map[$product_id]
+          );
+        }
       }
     }
 
+/*
+file_put_contents('/tmp/uc_discounts_alt_order_and_discount', print_r(array(
+  'discount_product_ids' => $discount_product_ids,
+  'order_product_ids' => $order_product_ids,
+  'order_and_discount_product_ids' => $order_and_discount_product_ids,
+  'order_and_discount_products' => $order_and_discount_products,
+  'order_product_id_product_array_map' => $order_product_id_product_array_map,
+), true));
+*/
+
     // Amount of products to which discounts get applied
     $discount_products_amount = 0;
     // Quantity of products to which discounts get applied
@@ -1591,8 +1682,15 @@ function get_discounts_for_order($order, &$errors = NULL, &$warnings = NULL, &$m
     if ($discount->limit_max_times_applied && !empty($required_product_ids)) {
       $times = 0;
       foreach ($required_product_ids as $id) {
-        if (isset($order_product_id_quantity_map[$id])) {
-          $times += $order_product_id_quantity_map[$id];
+        if ($sku_filter_flag) {
+          if (isset($order_product_id_quantity_map_by_sku[$id])) {
+            $times += $order_product_id_quantity_map_by_sku[$id];
+          }
+        }
+        else {
+          if (isset($order_product_id_quantity_map[$id])) {
+            $times += $order_product_id_quantity_map[$id];
+          }
         }
       }
       $discount->times_applied = min($discount->times_applied, $times);
@@ -1880,6 +1978,16 @@ function get_codeless_discounts_for_product_and_quantity($product, $quantity = N
   $result = db_query("SELECT DISTINCT model FROM {uc_products} WHERE nid=%d", $product->nid);
   while ($row = db_fetch_array($result)) $skus[] = "'". db_escape_string($row["model"]) ."'";
 
+  // Get SKUs from adjustments table too
+  if (module_exists('uc_attribute')) {
+    $result = db_query('SELECT DISTINCT model FROM {uc_product_adjustments} WHERE nid = %d', $product->nid);
+    while ($row = db_fetch_array($result)) {
+      $skus[] = '\'' . db_escape_string($row['model']) . '\'';
+// @todo - look into making a helper function like this
+//      $skus[] = uc_discounts_dbesc($row['model']);
+    }
+  }
+
   //Get classes for product
   $classes   = array();
   $classes[] = "'". db_escape_string(ALL_CLASSES) ."'";
@@ -2190,3 +2298,4 @@ function uc_discounts_add_to_existing_map_number_value(&$a, $key, $value) {
 function uc_discounts_views_api() {
   return array('api' => 2);
 }
+
-- 
1.7.2.5

